#include<stdio.h>
#include<limits.h>

struct Process{
    int pid;
    int arrival;
    int burst;
    int reaminig;
    int complete;
    int waiting;
    int turnaround;
};

void sjf(struct Process p[] ,int n){
    int complete=0,current = 0;
    int index;

    while(complete != n){
        index = -1;
        int min_time = INT_MAX;

        for (int i =0;i<n;i++){
        if(p[i].arrival <= current && p[i].reaminig >0 && p[i].reaminig<min_time){
            min_time = p[i].reaminig;
            index =i;
        }
        }

        if (index ==-1){
            current++;
            continue;
        }

        p[index].reaminig--;
        current++;

        if(p[index].reaminig == 0){
            complete++;
            p[index].complete = current;
            p[index].turnaround = p[index].complete - p[index].arrival;
            p[index].waiting = p[index].turnaround - p[index].burst;
        }
    }
}

void display(struct Process p[],int n){
    int avg_wait=0,avg_tat =0;
    printf("\n|\tpid\t|\tArrival\t|\tBurst\t|\tWaiting\t|\tTAT\t|\n");
    for(int i=0;i<n;i++){
        printf("Pro-%d\t%d\t%d\t%d\t%d\n",p[i].pid,p[i].arrival,p[i].burst,p[i].waiting,p[i].turnaround);
        avg_tat += p[i].turnaround;
        avg_wait += p[i].waiting;
    }
    printf("\n\nAverage waiting :%.2f",(float)avg_wait/n);
    printf("\n\nAverage TAT :%.2f",(float)avg_tat/n);
}

int main(){
    int n;
    printf("Enter the Number of process:\n");
    scanf("%d",&n);

    struct Process p[n];
    for (int i=0;i<n;i++){
        p[i].pid = i+1;
        printf("\nEnter Arrival for %d\n",i+1);
        scanf("%d",&p[i].arrival);
        printf("\nEnter burst for %d\n",i+1);
        scanf("%d",&p[i].burst);
        p[i].reaminig = p[i].burst;
        p[i].turnaround=0;
        p[i].waiting=0;
	p[i].complete=0;
    }
    sjf(p,n);
    display(p,n);
}